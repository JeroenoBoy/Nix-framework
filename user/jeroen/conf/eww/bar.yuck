;; Variables

(defvar battery_icons_count 11)

(defpoll battery_output :interval "10s" "sh scripts/battery.sh")
(defpoll cpu_temp :interval "10s" :initial "0" "sh scripts/cpu_temp.sh")
(defpoll time :interval "1s" `date "+%a %d %b %H:%M"`)

(deflisten active_workspace :initial 1 "sh scripts/hypr_workspaces.sh active")
(deflisten current_workspaces :initial "[1]" "sh scripts/hypr_workspaces.sh all")
(deflisten notification_stats :initial "{\"count\": 0, \"dnd\": false}" "swaync-client --subscribe")
(defpoll time_precise :interval "1s" `date "+%a %d %b %H:%M:%S"`)

;; Window

(defwindow topbar
  :class "topbar"
  :monitor 0
  :geometry (geometry :width "109%" :x "0%" :y "5px" :anchor "t c")
  :stacking "fg"
  :exclusive true

  (centerbox :class "container"
       ;:orientation "horizontal"
       ;:halign "fill"
       ;:hexpand true
       ;:space-evenly false

    (section :halign "start"
      (battery_status)
      (ram_status)
      (cpu_status)
      (disk_status)
      (temp_status))

    (button :class "section-workspaces"
         :halign "center"
         :onclick "${EWW_CMD} open --toggle start_menu-closer; ${EWW_CMD} open --toggle start_menu"
      (workspaces))

    (section :halign "end" :style "padding-right: 0.9em"
      (systray :spacing 12 :icon-size 16 :class "tray")
      (button :onclick "${EWW_CMD} open --toggle calendar_window-closer; ${EWW_CMD} open --toggle calendar_window" "${time}")
      (notification_status))))

;; Widgets

(defwidget section [halign ?style]
  (box :class "section" :style style
       :halign halign
       :space-evenly false
       :spacing 20
    (children)))

(defwidget battery_status []
  (box :class {EWW_BATTERY.BAT1.capacity > 30 ? "module bat"
                : EWW_BATTERY.BAT1.capacity > 10 ? "module bat warn" 
                : EWW_BATTERY.BAT1.capacity > 5 ? "module bat critical"
                : "module bat supercrit" }
    battery_output))

(defwidget ram_status []
  (box :class "module"
    "  ${round(EWW_RAM.used_mem_perc, 0)}%"))

(defwidget cpu_status []
  (box :class "module"
    "  ${round(EWW_CPU.avg, 2)}%"))

(defwidget disk_status []
  (box :class "module"
    "  ${round(EWW_DISK["/"].used_perc, 0)}%"))

(defwidget temp_status []
  (box :class "module"
    " ${round(cpu_temp, 0)}°C"))

(defwidget workspaces [] 
  (box :class "workspaces" :space-evenly false
    (for i in current_workspaces
      (box :class {i == active_workspace ? "workspace active" : "workspace"}
        ""))))

(defwidget notification_status []
  (button :class "module"
          :onclick "swaync-client -t -sw"
          :onrightclick "swaync-client -d -sw"
    (box
      {notification_stats.dnd ? "" : ""}
      (box :class "notification-widget"
           :style {notification_stats.count > 0 ? "" : "color: transparent"}
        "")))
    )
